#include <stdio.h>
#include <string.h>
#include <string.h>
#include <math.h>
int count(int n,int k)
{
	int c=0;
	while (n>0)
	{
		if (n%2 ==1)
		c++;
		if (c>k)
		return k+1;
		n=n>>1;
	}
	return c;
}
int count1(int n)
{
	int c=0;
	while (n>0)
	{
		if (n%2 ==1)
		c++;
		n/=2;
	}
	return c;
}

int countNoDigits(int n)
{
	int c=0;
	while (n>0)
	{
		c++;
		n=n>>1;
	}
	return c;
}


int main(void) {
	int t,n,k,n1,i,j,newnum,ans,k1;
	scanf("%d",&t);
	int arr[32];
	
	while (t--)
	{
		memset(arr,0,sizeof(arr));
		scanf("%d %d",&n,&k);
		
		if (k==0)
		ans=-1;
		else 
		{
		n1=n;
		
		int nod=countNoDigits(n);
		
		for (i=nod-1;i>=0;i--,n1/=2)
		arr[i]=n1%2;
		
		
	
		if (k>=nod)
		{
			n=n-1;
			while (1)
			{
				if (n<1)
			{
			ans=-1;
	
			break;
			}
			if (count(n,k)<=k)
			{
			ans=n;
			break;
			}
			n=n-2;
			}
		}
		else 
		{
			k--;
			int c=0;
			
			for (i=0;i<nod && k>0;i++)
			{
				//printf("arr[i] is %d\n",arr[i]);
			if (arr[i] == 1)
			{
				c++;
			}
			if (c == k)
			{
				break;
			}
			}
			
		
			for (j=(k==0)?0:i+1;j<nod;j++)
			{
				arr[j]=0;
			}
			k++;
		
			
			newnum=0;;
		/*	for (i=0;i<nod;i++)
			printf("%d ",arr[i]);
			printf("\n");*/
			k1=0;
			for (i=nod-1;i>=0;i--)
			{
			newnum=newnum+(arr[i]*(int)pow(2,k1));
			k1++;
			}
			
			newnum++;
			while (newnum > n)
			newnum=newnum-2;
			
			/*printf("new num is %d\n",newnum);
			printf("no of digits in newnum is %d\n",count1(newnum));
			printf("count is %d\n",k);*/
			
			while (1)
			{
				if (newnum<1)
			{
			ans=-1;
	
			break;
			}
			if (count(newnum,k)<=k)
			{
			ans=newnum;
			break;
			}
			
			newnum=newnum-2;
			}
			
		}
		}
		
		printf("%d\n",ans);
		
		
	}
	return 0;
}
