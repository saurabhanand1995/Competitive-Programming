import java.io.*;
class spojHangover
{
    public static void main(String args[]) throws IOException
    {
        BufferedReader x=new BufferedReader(new InputStreamReader(System.in));
        double arr[]={0.5,0.8333333333333333,1.0833333333333333,1.2833333333333332,1.45,1.5928571428571427,1.7178571428571427,1.828968253968254,1.928968253968254,2.019877344877345,2.1032106782106785,2.1801337551337556,2.2515623265623272,2.318228993228994,2.380728993228994,2.4395525226407586,2.495108078196314,2.5477396571436826,2.5977396571436824,2.64535870476273,2.6908132502172752,2.7342915110868407,2.775958177753507,2.815958177753507,2.8544197162150455,2.8914567532520827,2.9271710389663683,2.961653797587058,2.994987130920391,3.02724519543652,3.05849519543652,3.0887982257395503,3.1182099904454326,3.146781419016861,3.1745591967946387,3.201586223821666,3.22790201329535,3.2535430389363755,3.2785430389363754,3.3029332828388145,3.326742806648338,3.3499986206018266,3.3727258933290996,3.3949481155513217,3.4166872459861044,3.4379638417307854,3.458797175064119,3.479205338329425,3.499205338329425,3.5188131814666797,3.538043950697449,3.556911875225751,3.5754303937442695,3.5936122119260876,3.6114693547832304,3.6290132144323533,3.646254593742698,3.663203746285071,3.6798704129517374,3.696263855574688,3.7123928878327526,3.7282659037057684,3.7438909037057684,3.7592755190903837,3.774427034241899,3.789352407376227,3.804058289729168,3.8185510433523566,3.832836757638071,3.8469212646803244,3.860810153569213,3.8745087837061996,3.888022297219713,3.9013556305530463,3.9145135252898884,3.9275005382769015,3.9403210510974143,3.9529792789455156,3.9654792789455158,3.9778249579578615,3.990020079909081,4.002068272680165,4.013973034584927,4.02573774046728,4.037365647444024,4.048859900317587,4.060223536681224,4.071459491737404,4.082570602848515,4.093559613837526,4.104429179054917,4.11518186722696,4.1258201650993005,4.136346480888774,4.146763147555441,4.157072425905956,4.16727650753861,4.17737751763962,4.18737751763962,4.19727850773863,4.207082429307257,4.216791167171335,4.22640655178672,4.23593036131053,4.24536432357468,4.254710117967203,4.263969377226463,4.273143689153068,4.282234598243977,4.291243607252986,4.300172178681557,4.309021736203682,4.317793666028243,4.326489318202157,4.335110007857329,4.343657016404338,4.352131592675525,4.360534954020062,4.368868287353396,4.377132750163313,4.385329471474789,4.393459552775601,4.401524068904633,4.409524068904633,4.417460576841141,4.425334592589173,4.433147092589173,4.440899030573669,4.4485913382659765,4.456224926052236,4.463800683627994,4.471319480620475,4.4787821671876396,4.486189574595047,4.493542515771518,4.500841785844511,4.5080881626561045,4.515282407260421,4.522425264403278,4.529517462984838,4.536559716505965,4.543552723498972,4.5504971679434165,4.557393719667554,4.564243034736047,4.571045755824483,4.57780251258124,4.584513921977213,4.59118058864388,4.597803105200171,4.604382052568592,4.610918000281011,4.617411506774517,4.623863119677743,4.630273376088,4.636642802839592,4.642971916763643,4.649261224939743,4.655511224939743,4.6617224050639665,4.667895244570139,4.674030213895293,4.680127774870902,4.686188380931508,4.69221247731705,4.698200501269146,4.7041528822215275,4.710070041984841,4.715952394926018,4.721800348142392,4.727614301630764,4.733394648451573,4.739141774888354,4.74485606060264,4.750537878784458,4.756187596298583,4.761805573826672,4.767392166005443,4.772947721560999,4.778472583439452,4.783967088933958,4.789431569808275,4.79486635241697,4.800271757822376,4.805648101908398,4.810995695491285,4.816314844427455,4.821605849718461,4.8268690076131975,4.8321046097074385,4.8373129430407715,4.842494290191031,4.847648929366288,4.852777134494493,4.85787917531082,4.8629553174427995,4.868005822493305,4.873030948121445,4.878030948121445,4.883006072499555,4.887956567549059,4.892882675923444,4.897784636707757,4.902662685488245,4.907517054420284,4.91234797229468,4.917155664602372,4.921940353597588,4.926702258359493,4.931441594852384,4.936158575984459,4.94085341166521,4.945526308861472,4.950177471652169,4.954807101281799,4.959415396212674,4.964002552175977,4.968568762221639,4.973114216767094,4.977639103644922,4.982143608149427,4.986627913082162,4.991092198796448,4.995536643240892,4.999961422001954,5.004366708345566,5.008752673257847,5.013119485484921,5.0174673115718775,5.021796315900882,5.026106660728468,5.03039850622203,5.034672010495535,5.038927329644471,5.043164617780064,5.047384027062765,5.0515857077350335,5.0557698081534435,5.05993647482011,5.064085852413471,5.068218083818429,5.072333310155878,5.076431670811616,5.080513303464677,5.084578344115084,5.088626927111035,5.092659185175551,5.096675249432579,5.100675249432578,5.104659313177598,5.108627567145852,5.112580136315813,5.116517144189829,5.12043871281728,5.12434496281728,5.1282360134009375,5.132111982393186,5.135972986254189,5.139819140100343,5.143650557724864,5.147467351617993,5.151269632986814,5.155057511774693,5.158831096680354,5.162590495176595,5.166335813528654,5.1700671568122365,5.1737846289311955,5.1774883326348995,5.181178369535268,5.184854840123504,5.188517843786507,5.192167478823004};
        double inp;
        while (true)
        {
           inp=Double.parseDouble(x.readLine());
            if (inp == 0)
            break;
            int k=0;
            while (true)
            {
                if (arr[k++] >=inp)
                {
                    System.out.println(k+" card(s)");
                    break;
                }
            }
        }
    }
}
